/**
 * Canvas API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function (root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd() + '/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd() + '/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CanvasApi);
  }
})(this, function (expect, CanvasApi) {
  'use strict';

  var instance;

  beforeEach(function () {
    instance = new CanvasApi.PackagesApi();
  });

  var getProperty = function (object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function') return object[getter]();
    else return object[property];
  };

  var setProperty = function (object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function') object[setter](value);
    else object[property] = value;
  };

  describe('PackagesApi', function () {
    describe('createProjectPackageProjectsProjectIdPackagesPost', function () {
      it('should call createProjectPackageProjectsProjectIdPackagesPost successfully', function (done) {
        //uncomment below and update the code to test createProjectPackageProjectsProjectIdPackagesPost
        //instance.createProjectPackageProjectsProjectIdPackagesPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteProjectPackageProjectsProjectIdPackagesPackageIdDelete', function () {
      it('should call deleteProjectPackageProjectsProjectIdPackagesPackageIdDelete successfully', function (done) {
        //uncomment below and update the code to test deleteProjectPackageProjectsProjectIdPackagesPackageIdDelete
        //instance.deleteProjectPackageProjectsProjectIdPackagesPackageIdDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deployProjectPackageProjectsProjectIdPackagesPackageIdDeployPost', function () {
      it('should call deployProjectPackageProjectsProjectIdPackagesPackageIdDeployPost successfully', function (done) {
        //uncomment below and update the code to test deployProjectPackageProjectsProjectIdPackagesPackageIdDeployPost
        //instance.deployProjectPackageProjectsProjectIdPackagesPackageIdDeployPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('destroyProjectPackageProjectsProjectIdPackagesPackageIdDestroyDelete', function () {
      it('should call destroyProjectPackageProjectsProjectIdPackagesPackageIdDestroyDelete successfully', function (done) {
        //uncomment below and update the code to test destroyProjectPackageProjectsProjectIdPackagesPackageIdDestroyDelete
        //instance.destroyProjectPackageProjectsProjectIdPackagesPackageIdDestroyDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getProjectPackageProjectsProjectIdPackagesPackageIdGet', function () {
      it('should call getProjectPackageProjectsProjectIdPackagesPackageIdGet successfully', function (done) {
        //uncomment below and update the code to test getProjectPackageProjectsProjectIdPackagesPackageIdGet
        //instance.getProjectPackageProjectsProjectIdPackagesPackageIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listProjectPackagesProjectsProjectIdPackagesGet', function () {
      it('should call listProjectPackagesProjectsProjectIdPackagesGet successfully', function (done) {
        //uncomment below and update the code to test listProjectPackagesProjectsProjectIdPackagesGet
        //instance.listProjectPackagesProjectsProjectIdPackagesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateProjectPackageProjectsProjectIdPackagesPackageIdPatch', function () {
      it('should call updateProjectPackageProjectsProjectIdPackagesPackageIdPatch successfully', function (done) {
        //uncomment below and update the code to test updateProjectPackageProjectsProjectIdPackagesPackageIdPatch
        //instance.updateProjectPackageProjectsProjectIdPackagesPackageIdPatch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateProjectPackageProvisionerProjectsProjectIdPackagesPackageIdPatch', function () {
      it('should call updateProjectPackageProvisionerProjectsProjectIdPackagesPackageIdPatch successfully', function (done) {
        //uncomment below and update the code to test updateProjectPackageProvisionerProjectsProjectIdPackagesPackageIdPatch
        //instance.updateProjectPackageProvisionerProjectsProjectIdPackagesPackageIdPatch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });
});
