/**
 * Canvas API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Connection model module.
 * @module model/Connection
 * @version 0.1.0
 */
class Connection {
  /**
   * Constructs a new <code>Connection</code>.
   * @alias module:model/Connection
   * @param sourcePackageId {String}
   * @param targetPackageId {String}
   * @param sourceHandle {String}
   * @param targetHandle {String}
   * @param id {String}
   * @param projectId {String}
   */
  constructor(
    sourcePackageId,
    targetPackageId,
    sourceHandle,
    targetHandle,
    id,
    projectId
  ) {
    Connection.initialize(
      this,
      sourcePackageId,
      targetPackageId,
      sourceHandle,
      targetHandle,
      id,
      projectId
    );
  }

  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */
  static initialize(
    obj,
    sourcePackageId,
    targetPackageId,
    sourceHandle,
    targetHandle,
    id,
    projectId
  ) {
    obj['source_package_id'] = sourcePackageId;
    obj['target_package_id'] = targetPackageId;
    obj['source_handle'] = sourceHandle;
    obj['target_handle'] = targetHandle;
    obj['id'] = id;
    obj['project_id'] = projectId;
  }

  /**
   * Constructs a <code>Connection</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Connection} obj Optional instance to populate.
   * @return {module:model/Connection} The populated <code>Connection</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new Connection();

      if (data.hasOwnProperty('source_package_id')) {
        obj['source_package_id'] = ApiClient.convertToType(
          data['source_package_id'],
          'String'
        );
      }
      if (data.hasOwnProperty('target_package_id')) {
        obj['target_package_id'] = ApiClient.convertToType(
          data['target_package_id'],
          'String'
        );
      }
      if (data.hasOwnProperty('source_handle')) {
        obj['source_handle'] = ApiClient.convertToType(
          data['source_handle'],
          'String'
        );
      }
      if (data.hasOwnProperty('target_handle')) {
        obj['target_handle'] = ApiClient.convertToType(
          data['target_handle'],
          'String'
        );
      }
      if (data.hasOwnProperty('id')) {
        obj['id'] = ApiClient.convertToType(data['id'], 'String');
      }
      if (data.hasOwnProperty('project_id')) {
        obj['project_id'] = ApiClient.convertToType(
          data['project_id'],
          'String'
        );
      }
    }
    return obj;
  }

  /**
   * Validates the JSON data with respect to <code>Connection</code>.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Connection</code>.
   */
  static validateJSON(data) {
    // check to make sure all required properties are present in the JSON string
    for (const property of Connection.RequiredProperties) {
      if (!data.hasOwnProperty(property)) {
        throw new Error(
          'The required field `' +
            property +
            '` is not found in the JSON data: ' +
            JSON.stringify(data)
        );
      }
    }
    // ensure the json data is a string
    if (
      data['source_package_id'] &&
      !(
        typeof data['source_package_id'] === 'string' ||
        data['source_package_id'] instanceof String
      )
    ) {
      throw new Error(
        'Expected the field `source_package_id` to be a primitive type in the JSON string but got ' +
          data['source_package_id']
      );
    }
    // ensure the json data is a string
    if (
      data['target_package_id'] &&
      !(
        typeof data['target_package_id'] === 'string' ||
        data['target_package_id'] instanceof String
      )
    ) {
      throw new Error(
        'Expected the field `target_package_id` to be a primitive type in the JSON string but got ' +
          data['target_package_id']
      );
    }
    // ensure the json data is a string
    if (
      data['source_handle'] &&
      !(
        typeof data['source_handle'] === 'string' ||
        data['source_handle'] instanceof String
      )
    ) {
      throw new Error(
        'Expected the field `source_handle` to be a primitive type in the JSON string but got ' +
          data['source_handle']
      );
    }
    // ensure the json data is a string
    if (
      data['target_handle'] &&
      !(
        typeof data['target_handle'] === 'string' ||
        data['target_handle'] instanceof String
      )
    ) {
      throw new Error(
        'Expected the field `target_handle` to be a primitive type in the JSON string but got ' +
          data['target_handle']
      );
    }
    // ensure the json data is a string
    if (
      data['id'] &&
      !(typeof data['id'] === 'string' || data['id'] instanceof String)
    ) {
      throw new Error(
        'Expected the field `id` to be a primitive type in the JSON string but got ' +
          data['id']
      );
    }
    // ensure the json data is a string
    if (
      data['project_id'] &&
      !(
        typeof data['project_id'] === 'string' ||
        data['project_id'] instanceof String
      )
    ) {
      throw new Error(
        'Expected the field `project_id` to be a primitive type in the JSON string but got ' +
          data['project_id']
      );
    }

    return true;
  }
}

Connection.RequiredProperties = [
  'source_package_id',
  'target_package_id',
  'source_handle',
  'target_handle',
  'id',
  'project_id',
];

/**
 * @member {String} source_package_id
 */
Connection.prototype['source_package_id'] = undefined;

/**
 * @member {String} target_package_id
 */
Connection.prototype['target_package_id'] = undefined;

/**
 * @member {String} source_handle
 */
Connection.prototype['source_handle'] = undefined;

/**
 * @member {String} target_handle
 */
Connection.prototype['target_handle'] = undefined;

/**
 * @member {String} id
 */
Connection.prototype['id'] = undefined;

/**
 * @member {String} project_id
 */
Connection.prototype['project_id'] = undefined;

export default Connection;
